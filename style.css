@import url('https://fonts.googleapis.com/css?family=Muli');
*{
    font-family: 'Muli', sans-serif;
    color: #fff;
    box-sizing: border-box;
    margin: auto;  /* 中央揃え */
}
h1{
    text-align: center;  /* 中央揃え */
    grid-area: header;
}
button{
    font-size: 16px;
    background: #666;
    margin: 8px;
    border-radius: 10px;
    padding: 10px;
    width: 1fr;  /* Grid 特有。面白い。 */
    cursor: pointer;
}
input{
    font-size: 18px;
    color: #555;
    padding: 8px;
    height: 40px;
    grid-area: result;
    width: 95%;  /* 左右に余白を持たせたかった。 */
}
body{
    --height: 60px;  /* CSSでも変数を使えるらしい。 */
    width: max-content;  /* 子要素の 最大幅+Margin が bodyの最大幅 */
    padding: 8px;
    background: #333;
}
button.copy{
    width: 40px;
    height: 40px;
    border-radius: 20px;  /* 丸にしたかった。楕円にならないようにwidth=heightになっている */
    font-size: 24px;
    padding: 4px;
    grid-area: copyBtn;
}

button.ttl{
    grid-area: ttlBtn;
}
button.url{
    grid-area: urlBtn;
}
button.bmark{
    grid-area: markBtn;
}
p{
    width: max-content;
    grid-area: notice;
    text-align: right;
    z-index: 2;
}
div.msg{
    z-index: 300;  /* 究極に上に表示させている。 */
    grid-area: msg;
    display: none;
    width: 100px;
    height: 30px;
    margin-right: 0;
    border-radius: 15px;
    padding: 4px 18px;
    font-size: 18px;
    background: #eee;
}
p.copied, p.failed{
    color: #333;
    z-index: 350;  /* さらに上に表示 */
    display: none;
    grid-area: unset;
    position: absolute;
}